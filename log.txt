==3904== Memcheck, a memory error detector
==3904== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==3904== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==3904== Command: ./shark
==3904== 
==3904== Conditional jump or move depends on uninitialised value(s)
==3904==    at 0x4C2E0E9: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3904==    by 0x64B882D: strdup (strdup.c:41)
==3904==    by 0x44A6BF: openJoystickDevice (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x44AB23: _glfwInitJoysticks (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x44A55B: _glfwPlatformInit (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x44596C: glfwInit (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x405E09: main (Main.cpp:140)
==3904== 
==3904== Conditional jump or move depends on uninitialised value(s)
==3904==    at 0x4C2E0F8: strlen (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==3904==    by 0x64B882D: strdup (strdup.c:41)
==3904==    by 0x44A6BF: openJoystickDevice (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x44AB23: _glfwInitJoysticks (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x44A55B: _glfwPlatformInit (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x44596C: glfwInit (in /home/megan/Documents/sp/0shark/Sharkify/shark)
==3904==    by 0x405E09: main (Main.cpp:140)
==3904== 
==3904== Conditional jump or move depends on uninitialised value(s)
==3904==    at 0x420FA6: SharkSkeleton::buildSkeleton(std::string) (SharkSkeleton.cpp:101)
==3904==    by 0x41C19D: SharkMesh::initSkeleton() (SharkMesh.cpp:14)
==3904==    by 0x41C0E5: SharkMesh::SharkMesh(int, int) (SharkMesh.cpp:9)
==3904==    by 0x4056D4: initialize() (Main.cpp:18)
==3904==    by 0x405F7D: main (Main.cpp:171)
==3904== 
==3904== 
==3904== Process terminating with default action of signal 11 (SIGSEGV)
==3904==  Access not within mapped region at address 0x0
==3904==    at 0x418C16: glm::detail::tvec4<float>::operator=(glm::detail::tvec4<float> const&) (type_vec4.inl:376)
==3904==    by 0x418306: glm::detail::tmat4x4<float>::operator=(glm::detail::tmat4x4<float> const&) (type_mat4x4.inl:352)
==3904==    by 0x417B51: RenderingHelper::loadIdentity() (RenderingHelper.cpp:46)
==3904==    by 0x41FDA0: SharkBone::SharkBone(int) (SharkBone.cpp:9)
==3904==    by 0x420DE1: SharkSkeleton::buildSkeleton(std::string) (SharkSkeleton.cpp:79)
==3904==    by 0x41C19D: SharkMesh::initSkeleton() (SharkMesh.cpp:14)
==3904==    by 0x41C0E5: SharkMesh::SharkMesh(int, int) (SharkMesh.cpp:9)
==3904==    by 0x4056D4: initialize() (Main.cpp:18)
==3904==    by 0x405F7D: main (Main.cpp:171)
==3904==  If you believe this happened as a result of a stack
==3904==  overflow in your program's main thread (unlikely but
==3904==  possible), you can try to increase the size of the
==3904==  main thread stack using the --main-stacksize= flag.
==3904==  The main thread stack size used in this run was 8388608.
==3904== 
==3904== HEAP SUMMARY:
==3904==     in use at exit: 2,489,537 bytes in 4,345 blocks
==3904==   total heap usage: 10,207 allocs, 5,862 frees, 4,498,321 bytes allocated
==3904== 
==3904== LEAK SUMMARY:
==3904==    definitely lost: 0 bytes in 0 blocks
==3904==    indirectly lost: 0 bytes in 0 blocks
==3904==      possibly lost: 98,515 bytes in 1,223 blocks
==3904==    still reachable: 2,391,022 bytes in 3,122 blocks
==3904==         suppressed: 0 bytes in 0 blocks
==3904== Rerun with --leak-check=full to see details of leaked memory
==3904== 
==3904== For counts of detected and suppressed errors, rerun with: -v
==3904== Use --track-origins=yes to see where uninitialised values come from
==3904== ERROR SUMMARY: 29 errors from 3 contexts (suppressed: 2 from 2)
